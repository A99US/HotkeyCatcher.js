/*
https://github.com/A99US/HotkeyCatcher.js
*/
if(!window.hotkeycatcher){window.hotkeycatcher={lib:null,bind:null,unbind:null,addkey:null,timer:"",prevModKeys:null,modArray:[16,17,18,91],result:{message:null,hotkey:[],key:[],code:[],modkey:null,onlymodkey:null},keysRev:{},keys:{backspace:8,tab:9,clear:12,enter:13,shift:16,ctrl:17,alt:18,pause:19,capslock:20,esc:27,space:32,pageup:33,pagedown:34,end:35,home:36,left:37,up:38,right:39,down:40,printscreen:44,insert:45,delete:46,help:47,meta:91,contextmenu:93,"numpad*":106,"numpad+":107,"numpad-":109,"numpad.":110,"numpad/":111,numlock:144,scrolllock:145,audiomute:173,audiodown:174,audioup:175,mediaplayer:181,app1:182,app2:183,";":186,"=":187,",":188,"-":189,".":190,"/":191,"`":192,"[":219,"\\":220,"]":221,"'":222}};for(let e=0;e<10;e++)window.hotkeycatcher.keys[""+e]=e+48;for(let e=0;e<10;e++)window.hotkeycatcher.keys["numpad"+e]=e+96;for(let e=65;e<91;e++)window.hotkeycatcher.keys[String.fromCharCode(e).toLowerCase()]=e;for(let e=0;e<12;e++)window.hotkeycatcher.keys["f"+(e+1)]=e+112;for(let e in window.hotkeycatcher.keys)window.hotkeycatcher.keysRev[window.hotkeycatcher.keys[e]]=e;window.hotkeycatcher.lib={itistrue:e=>["true","1",!0,1].includes(e),itisfalse:e=>!e||[null,"","0","false",0,!1].includes(e),sanitStr:e=>e.split("").filter((e=>/[a-zA-Z0-9]/.test(e))).join("")},document.addEventListener("keydown",(e=>{let t=e||window.event,o=t.ctrlKey,n=t.altKey,r=t.shiftKey,i=t.metaKey,d=window.hotkeycatcher.modArray.includes(t.keyCode)?"":o+" "+n+" "+r+" "+i;clearTimeout(window.hotkeycatcher.timer);let c=()=>{window.hotkeycatcher.result={message:null,hotkey:[],key:[],code:[],modkey:null,onlymodkey:null},window.hotkeycatcher.prevModKeys=null},l=window.hotkeycatcher.keysRev[t.keyCode];if(!l){c();let e="Error : Key '"+t.key+"' KeyCode '"+t.keyCode+"' Doesn't Exist In Keys Array. Raise an issue at GitHub repo or add keys to keys array by yourself.";return console.log(e),void(window.hotkeycatcher.result.message=e)}d==window.hotkeycatcher.prevModKeys?(window.hotkeycatcher.result.key.unshift(l),window.hotkeycatcher.result.code.unshift(t.keyCode)):(window.hotkeycatcher.prevModKeys=d,window.hotkeycatcher.result.message="",window.hotkeycatcher.result.modkey=""==d?"":((o?"ctrl ":"")+(n?"alt ":"")+(r?"shift ":"")+(i?"meta ":"")).trim(),window.hotkeycatcher.result.onlymodkey=""==d,window.hotkeycatcher.result.key=[l],window.hotkeycatcher.result.code=[t.keyCode]),window.hotkeycatcher.result.hotkey=[];let y=window.hotkeycatcher.result.key.length,a=""==window.hotkeycatcher.result.modkey?"":window.hotkeycatcher.result.modkey+" ";for(let e=0;e<y;e++)window.hotkeycatcher.result.hotkey.push(a+window.hotkeycatcher.result.key.slice(0,e+1).reverse().join(" "));window.hotkeycatcher.timer=(t.keyCode,setTimeout((()=>c()),1e3))}),!0),window.hotkeycatcher.bind=(...e)=>{let t,o="namespace"+Date.now(),n=[],r=!1;for(let i=0;i<e.length;i++){if(t=e[i],"function"==typeof t){r=t;break}["string","object"].includes(typeof t)&&(0==i&&"string"==typeof t?o=t:i>0&&n.push("object"==typeof t?t:[t]))}if(!r)return void console.log("Error : No Function In Arguments.");window.hotkeycatcher.bindhelper(o,n,(e=>{let t=e||window.event;r(t,window.hotkeycatcher.result.hotkey[0],window.hotkeycatcher.result)}),"bind")},window.hotkeycatcher.unbind=(...e)=>{if("string"!=typeof e[0])return void console.log("Error : First argument is not a string (namespace). Cannot be processed.");let t=e[0];window.hotkeycatcher.bindhelper(t,e.slice(1),null,"unbind")},window.hotkeycatcher.bindhelper=(e,t,o,n="bind")=>{let r,i,d;n="bind"==n?1:0,e=window.hotkeycatcher.lib.sanitStr(e),(window.hotkeycatcher.lib.itisfalse(t)||0==t.length)&&(t=[["",""]]);for(let c of t){if(window.hotkeycatcher.lib.itisfalse(c)?c=["",""]:"object"!=typeof c&&(c=[c]),window.hotkeycatcher.lib.itisfalse(c[0])||"document"==c[0].toLowerCase())r=$(document);else{if(r=$(c[0]),0==r.length){console.log("Error : Element '"+c[0]+"' Doesn't Exist In Document.\nNo Listener Was "+(n?"Added.":"Removed."));continue}n&&r.prop("tabindex","0")}if(window.hotkeycatcher.lib.itisfalse(c[1]))i=n?"keydown":"";else{if(!["keydown","keyup"].includes(c[1])){console.log("Error : Keyboard Event Type '"+c[1]+"' Is Not Available.\nNo Listener Was "+(n?"Added.":"Removed."));continue}i=c[1]}d=i+"."+e,r.off(d),n&&r.on(d,o)}},window.hotkeycatcher.addkey=e=>{if("object"!=typeof e)return void console.log("Error : Argument is not an array. Cannot be added.");let t,o,n;for(let r in e)t=e[r],o=window.hotkeycatcher.keys[r],n=window.hotkeycatcher.keysRev[t],o?console.log("Error : Key '"+r+"' (Code '"+o+"') Already Exist. Cannot be added."):n?console.log("Error : KeyCode '"+t+"' (Key '"+n+"') Already Exist. Cannot be added."):(window.hotkeycatcher.keys[r]=t,window.hotkeycatcher.keysRev[t]=r)}}